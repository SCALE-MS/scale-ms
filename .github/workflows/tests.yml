# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
  pull_request:
    branches: [ $default-branch ]

jobs:
  simple_local:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r requirements-testing.txt
        python -m pip install .
    - name: Test with pytest
      run: |
        python -X dev -m pytest tests -s

  containerized_rp:

    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
        # will assign a random free host port
        - 27017/tcp

    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m venv testenv
        . testenv/bin/activate
        python -m pip install --upgrade pip setuptools
        python -m pip install -r requirements-testing.txt
        python -m pip install --upgrade .
        python -m pip install pytest-cov
    - name: Test with pytest
      env:
        # use localhost for the host here because we are running the job on the VM.
        # If we were running the job on in a container this would be mongodb
        MONGODB_HOST: localhost
        MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }} # get randomly assigned published port
        RADILCAL_PILOT_DBURL:  mongodb://localhost:${{ job.services.mongodb.ports[27017] }}/test
      run: |
        . testenv/bin/activate
        python -X dev -m pytest --cov=scalems --cov-report=xml -rA tests --rp-venv $PWD/testenv
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
    - name: "Report"
      run: |
        cat ./coverage/codecov_report.txt
        cat ./coverage.xml

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install . --upgrade
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
        flake8 tests/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
