# Install and test scale-ms package in a Docker container.
#
# We currently use Docker to encapsulate the environment requirements of a
# functional RADICAL Pilot installation. We are not yet able to stage the scalems
# package into this environment or provide simple dispatching from a non-RP
# client environment, so we build an image containing both the scalems package
# and the test scripts, then make static use of that container.

language: python
python: "3.7"

git:
  depth: 1

jobs:
  include:
    - install:
        - pip install --upgrade pip setuptools
        - pip install -r requirements-testing.txt
        - pip install .
      script:
        - pytest tests -s
    - services:
        - docker
      install:
        # The rp-complete image should not change much and can reasonably be cached or pulled.
        - docker pull scalems/rp-complete
        - (cd docker && docker build -t scalems/rp-complete -f rp-complete.dockerfile .)
        # The scalems-rp image needs to be rebuilt for every commit because it contains the updated
        # scalems package and test scripts.
        - docker build -t scalems-rp -f docker/scalems-rp.dockerfile .
      script:
        # - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker run --rm --name scalems_test -u root -d scalems-rp
        - docker ps
        - sleep 5
        - docker exec -ti scalems_test bash -c ". rp-venv/bin/activate && python -m pytest --full-trace scalems/tests -s"
        # - if [ $? -ne 0 ]; then docker commit scalems_test scalems/ci; docker push scalems/ci; fi
        - docker kill scalems_test

before_install:
  - uname -a
  - ulimit -a
  - python -V
