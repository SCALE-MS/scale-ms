# Bring the services up with
#     docker compose -f docker-compose.yml up
# Shut down and clean up with
#     docker compose -f docker-compose.yml down
# The service running the "radicalpilot" image (built from
# radicalpilot.dockerfile in this directory) has an sshd server running and a
# Python environment configured for the "rp" user.
#
# The named services result in containers running with only somewhat predictable names.
# Once the services are up, you could, for instance, confirm the container name
# with `docker ps` and, assuming the login service is running as `docker_login_`, start a shell with
#     docker exec -ti -u rp docker_login_1 bash
# More normative usage is to reference the service through `docker compose`.
# For example, once the services are up, start a shell with
#     docker compose exec -u rp login bash
# or check the image's RADICAL CT stack:
#     docker compose exec -u rp login bash -c "cd && . /home/rp/rp-venv/bin/activate && radical-stack"
#
# Don't forget to `docker compose down` to shut down the containers when you are done.
#
# Once the login (and compute) service(s) are up, you can transfer the local
# respository files to the container however you prefer and install the scalems package
# (updating the dependencies if necessary). I have my IDE configured to automatically
# synchronize repository files to the /tmp/scalems_dev/ directory in the "login"
# container.
# Then I connect to the "login" service, either with `ssh -p 2345 rp@localhost`
# or `docker compose exec -u rp login bash`
# Then: `. /home/rp/rp-venv`, install the pydevd package recommend by my IDE,
# `pip install -r /tmp/scalems_dev/requirements-testing.txt`, and `pip install /tmp/scalems_dev`
# Then I can run
#     python -m pytest /tmp/scalems_dev/tests --rp-venv=/home/rp/rp-venv/ --rp-resource=docker.login --rp-access=local
#
# Alternatively, bring up the Docker Compose stack and run a test with a single line:
#     docker compose exec -u rp login bash -c '. rp-venv/bin/activate && pip install -r /tmp/scalems_dev/requirements-testing.txt && pip install -e /tmp/scalems_dev && python -m pytest /tmp/scalems_dev/tests/test_rp_exec.py --rp-venv=/home/rp/rp-venv/ --rp-resource=docker.login --rp-access=local'

version: '3.2'

services:
  mongo:
    image: mongo:bionic
    restart: always
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
  login:
    build:
      context: .
      dockerfile: ./radicalpilot.dockerfile
      cache_from:
       - scalems/radicalpilot
    image: scalems/radicalpilot
    restart: always
    ports:
      - "127.0.0.1:2345:22"
  compute:
    build:
      context: .
      dockerfile: ./radicalpilot.dockerfile
    image: scalems/radicalpilot
    restart: always
